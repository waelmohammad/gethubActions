name: Deploy to Firebase

on:
  push:
    branches:
      - firebase-dist
  repository_dispatch:
    types:
      - manual-trigger
jobs:
  deploy:
    runs-on: macos-latest

    env:
      FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 120
      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Deploy iOS to Firebase via Fastlane
        uses: maierj/fastlane-action@v1.4.0
        with:
          lane: distribute
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          APP_STORE_CONNECT_TEAM_ID: '${{ secrets.APP_STORE_CONNECT_TEAM_ID }}'
          DEVELOPER_APP_ID: '${{ secrets.DEVELOPER_APP_ID }}'
          DEVELOPER_APP_IDENTIFIER: '${{ secrets.DEVELOPER_APP_IDENTIFIER }}'
          DEVELOPER_PORTAL_TEAM_ID: '${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}'
          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_ID }}'
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: '${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}'
          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
          PROVISIONING_PROFILE_SPECIFIER: '${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}'
          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
          APPLE_KEY_ID: '${{ secrets.APPLE_KEY_ID }}'
          APPLE_ISSUER_ID: '${{ secrets.APPLE_ISSUER_ID }}'
          APPLE_KEY_CONTENT: '${{ secrets.APPLE_KEY_CONTENT }}'

      # Add the following steps to set the completion status as an output
      - name: Set workflow status
        id: set_status
        run: echo "##[set-output name=conclusion;]${{ job.status }}"
      
      - name: Fail the workflow on error
        if: failure()
        run: exit 1
